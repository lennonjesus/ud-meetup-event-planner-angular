!function(){"use strict";angular.module("eventplanner",["ui.router","ngMaterial","LocalForageModule","ngMaterialDatePicker"])}(),function(){"use strict";function e(e){"ngInject";e.state("signup",{url:"/signup",templateUrl:"app/signup/signup.html",controller:"SignupController",controllerAs:"vm"})}e.$inject=["$stateProvider"],angular.module("eventplanner").config(e)}(),function(){"use strict";function e(e,n,t,o,a){"ngInject";function i(){a(function(){angular.element("#inputName").focus()},300)}function r(a){a.$valid&&e.setItem("user",l.user).then(function(){e.getItem("user").then(function(e){n.loggedUser=e,t.show(t.simple().textContent("Welcome, "+e.name).hideDelay(3e3)),o.go("home")})})}var l=this;l.init=i,l.createUser=r,l.init()}e.$inject=["$localForage","$rootScope","$mdToast","$state","$timeout"],angular.module("eventplanner").controller("SignupController",e)}(),function(){"use strict";function e(e,n,t){"ngInject";function o(){n.show(n.simple().textContent("See you later! o/").hideDelay(3e3)),e.loggedUser=null,t.go("home")}var a=this;a.logout=o}e.$inject=["$rootScope","$mdToast","$state"],angular.module("eventplanner").controller("LogoutController",e)}(),function(){"use strict";function e(e){"ngInject";e.state("home",{url:"/",templateUrl:"app/home/home.html",controller:"HomeController",controllerAs:"vm"})}e.$inject=["$stateProvider"],angular.module("eventplanner").config(e)}(),function(){"use strict";function e(e,n,t,o,a){"ngInject";function i(){a(function(){angular.element("#inputEmail").focus()},300)}function r(a){a.$valid&&e.getItem("user").then(function(e){e?e.email===l.user.email&&e.password===l.user.password?(n.loggedUser=e,t.show(t.simple().textContent("Welcome, "+e.name).hideDelay(3e3))):t.show(t.simple().textContent("Invalid credentials!").hideDelay(3e3)):t.show(t.simple().textContent("No registered users.").hideDelay(3e3))})["catch"](function(e){t.show(t.simple().textContent("Unexpected error: "+e).hideDelay(3e3)),o.error(e)})}var l=this;l.init=i,l.login=r,l.init()}e.$inject=["$localForage","$rootScope","$mdToast","$log","$timeout"],angular.module("eventplanner").controller("HomeController",e)}(),function(){"use strict";function e(e){"ngInject";e.state("event",{url:"/event","abstract":!0,template:"<ui-view/>"}).state("event.list",{url:"/list",templateUrl:"app/event/event.list.html",controller:"EventListController",controllerAs:"vm"}).state("event.detail",{url:"/view/:id",templateUrl:"app/event/event.detail.html",controller:"EventDetailController",controllerAs:"vm"}).state("event.create",{url:"/create",templateUrl:"app/event/event.form.html",controller:"EventCreateController",controllerAs:"vm"})}e.$inject=["$stateProvider"],angular.module("eventplanner").config(e)}(),function(){"use strict";function e(e){"ngInject";function n(){e.getItem("events").then(function(e){t.events=e})}var t=this;t.init=n,t.init()}e.$inject=["$localForage"],angular.module("eventplanner").controller("EventListController",e)}(),function(){"use strict";function e(e,n,t,o){"ngInject";function a(){i()}function i(){t.getItem("events").then(function(e){r.event=e.filter(function(e){return e.id==o.id})[0]})["catch"](function(t){e.show(e.simple().textContent("Unexpected error: "+t).hideDelay(3e3)),n.error(t)})}var r=this;r.init=a,r.init()}e.$inject=["$mdToast","$log","$localForage","$stateParams"],angular.module("eventplanner").controller("EventDetailController",e)}(),function(){"use strict";function e(e,n,t,o,a,i){"ngInject";function r(){s.minDate=new Date,i(function(){angular.element("#inputEventName").focus()},300)}function l(e){e.$valid&&n.getItem("events").then(function(e){var t=e||[];s.event.id=Date.now(),t.push(s.event),n.setItem("events",t).then(function(){o.show(o.simple().textContent(s.event.name+" created!").hideDelay(3e3)),a.go("event.list")})})}var s=this;s.event={guests:[]},s.eventTypeList=[{value:"birthday",label:"Birthday"},{value:"conferenceTalk",label:"Conference Talk"},{value:"party",label:"Party"},{value:"show",label:"Show"},{value:"wedding",label:"Wedding"}],s.guests=[],s.states=[{abbrev:"BA",name:"Bahia"},{abbrev:"MG",name:"Minas Gerais"},{abbrev:"RJ",name:"Rio de Janeiro"},{abbrev:"SP",name:"SÃ£o Paulo"}],s.separatorKeys=[e.KEY_CODE.ENTER,e.KEY_CODE.COMMA,186],s.init=r,s.createEvent=l,s.init()}e.$inject=["$mdConstant","$localForage","$rootScope","$mdToast","$state","$timeout"],angular.module("eventplanner").controller("EventCreateController",e)}(),function(){"use strict";function e(e,n,t){"ngInject";t.html5Mode(!0).hashPrefix("!"),n.otherwise("/"),e.state("app",{url:"/",component:"app"})}e.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"],angular.module("eventplanner").config(e)}(),function(){"use strict";function e(){"ngInject"}angular.module("eventplanner").config(e)}(),angular.module("eventplanner").run(["$templateCache",function(e){e.put("app/event/event.detail.html",'<md-content flex>\n  <md-toolbar >\n    {{vm.event.name}}\n  </md-toolbar>\n\n  <p>\n    {{vm.event.type}} hosted by {{vm.event.host}}\n  </p>\n  <p>\n    From: {{vm.event.startDate | date : \'dd/MM/yyyy HH:mm\'}}\n  </p>\n  <p>\n    To: {{vm.event.endDate | date : \'dd/MM/yyyy HH:mm\'}}\n  </p>\n  <p>\n    Guests:\n    <md-chips ng-model="vm.event.guests" readonly="true">\n      <md-chip-template>\n        {{$chip}}\n      </md-chip-template>\n    </md-chips>\n  </p>\n  <p>\n    {{vm.event.address}}, {{vm.event.city}}, {{vm.event.state}}\n  </p>\n  <p>\n    <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3681.0937865940105!2d-43.27494718439352!3d-22.687552335789878!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x9973c193254263%3A0x3fb0ff85cd6293a1!2sAv.+das+Palmeiras%2C+1290+-+Jardim+Primavera%2C+Duque+de+Caxias+-+RJ!5e0!3m2!1spt-BR!2sbr!4v1477678601020" width="100%" height="300px" frameborder="0" style="border:0" allowfullscreen></iframe>\n  </p>\n</md-content>\n'),e.put("app/event/event.form.html",'<md-toolbar >\n  Event creation\n</md-toolbar>\n\n<br />\n\n<md-content flex>\n\n  <form name="eventForm" novalidate ng-submit="vm.createEvent(eventForm)">\n\n    <md-input-container class="md-block">\n      <label>Name</label>\n      <input ng-model="vm.event.name" ng-required="true" autofocus id="inputEventName">\n      <div class="hint">The name of your event</div>\n    </md-input-container>\n\n    <md-input-container class="md-block">\n      <label>Type</label>\n      <input id="eventType" list="typeList" ng-model="vm.event.type" ng-required="true">\n      <div class="hint">Ex: birthday party, conference talk, wedding, etc.</div>\n      <datalist id="typeList">\n        <option value="Birthday"></option>\n        <option value="Conference Talk"></option>\n        <option value="Party"></option>\n        <option value="Show"></option>\n        <option value="Wedding"></option>\n      </datalist>\n    </md-input-container>\n\n    <md-input-container class="md-block">\n      <label>Host</label>\n      <input id="eventHost" ng-model="vm.event.host" ng-required="true">\n      <div class="hint">Who is the event host?</div>\n    </md-input-container>\n\n    <div class="range layout-column flex-gt-md-30">\n      <md-input-container class="md-input-has-placeholder">\n        <label>Start date</label>\n        <input mdc-datetime-picker="" date="true" time="true" type="text"\n          min-date="vm.minDate" max-date="vm.event.endDate"\n          ng-model="vm.event.startDate" class=" md-input" id="input_0">\n      </md-input-container>\n\n      <md-input-container class="md-input-has-placeholder">\n        <label>End date</label>\n        <input mdc-datetime-picker="" date="true" time="true" type="text"\n          min-date="vm.minDate"="vm.event.startDate"="vm.event.endDate"\n          ng-model="vm.event.endDate" class=" md-input" id="input_1">\n      </md-input-container>\n    </div>\n\n    <md-input-container class="md-block">\n      <label>Address</label>\n      <input id="eventAddress" ng-model="vm.event.address" ng-required="true" autocomplete="address-line1">\n    </md-input-container>\n\n    <md-input-container md-no-float class="md-block">\n      <label>Address 2</label>\n      <input id="eventAddress2" ng-model="vm.event.address2" autocomplete="address-line2">\n    </md-input-container>\n\n    <div layout-gt-sm="row">\n      <md-input-container class="md-block">\n        <label>City</label>\n        <input id="eventCity" ng-model="vm.event.city" ng-required="true" autocomplete="address-level2">\n      </md-input-container>\n\n      <md-input-container class="md-block">\n        <label>State</label>\n        <md-select id="eventState" ng-model="vm.event.state" ng-required="true" autocomplete="address-level1">\n          <md-option ng-repeat="state in vm.states" value="{{state.abbrev}}">\n            {{state.name}}\n          </md-option>\n        </md-select>\n      </md-input-container>\n\n    </div>\n\n    <md-input-container class="md-block">\n      <label>Gest list</label>\n      <md-chips id="eventGuests" name="eventGuests"\n        ng-model="vm.event.guests"\n        md-separator-keys="vm.separatorKeys"\n        placeholder="Write and press return"\n        secondary-placeholder="Another name">\n      </md-chips>\n      <div class="hint" md-colors="{color: \'red\'}" ng-show="vm.event.guests.length === 0">\n        You must add at least one guest.\n      </div>\n    </md-input-container>\n\n    <md-switch ng-model="vm.notifyGuests" aria-label="Notify guests">\n      Send a note for guests?\n    </md-switch>\n\n    <md-input-container class="md-block" ng-if="vm.notifyGuests">\n      <label>Notification</label>\n      <textarea id="eventGuestsNotification" ng-model="vm.event.notification"\n        md-maxlength="150" rows="5" md-select-on-focus>\n      </textarea>\n    </md-input-container>\n\n    <section layout="row" layout-sm="column" layout-align="center center" layout-wrap>\n      <md-button type="submit" class="md-raised md-primary" ng-disabled="eventForm.$invalid || vm.event.guests.length === 0">Create</md-button>\n      <md-button class="md-raised md-warn" ui-sref="home">Cancel</md-button>\n    </section>\n\n  </form>\n\n</md-content>\n'),e.put("app/event/event.list.html",'<md-toolbar class="md-theme-light">\n  <h2 class="md-toolbar-tools">\n    <span>Events</span>\n  </h2>\n</md-toolbar>\n\n<br />\n\n<md-content flex layout-padding>\n  <md-list>\n    <md-list-item class="md-3-line" ng-repeat="event in vm.events">\n      <div class="md-list-item-text">\n        <h3>\n          <a ui-sref="event.detail({id: event.id})">{{event.name}}</a>\n        </h3>\n        <h3>{{event.type}}, hosted by {{event.host}}</h3>\n        <p>\n          {{event.city}}, {{event.state}}\n        </p>\n        <p>\n          {{event.address}}\n        </p>\n        <p ng-if="event.address2">\n          {{event.address2}}\n        </p>\n        <md-chips ng-model="event.guests" readonly="true">\n          <md-chip-template>\n            {{$chip}}\n          </md-chip-template>\n        </md-chips>\n      </div>\n      <md-divider ng-if="!$last"></md-divider>\n    </md-list-item>\n  </md-list>\n</md-content>\n'),e.put("app/home/home.html",'<div ng-if="!loggedUser">\n  <form name="userForm" novalidate ng-submit="vm.login(userForm)">\n\n    <md-toolbar >\n      Authentication\n    </md-toolbar>\n\n    <br />\n\n    <md-content flex>\n\n      <md-input-container class="md-block md-icon-float">\n        <label>E-mail</label>\n        <input ng-model="vm.user.email" ng-required="true" autofocus id="inputEmail">\n      </md-input-container>\n\n      <md-input-container class="md-block">\n        <label>Password</label>\n        <input type="password" ng-model="vm.user.password" ng-required="true">\n      </md-input-container>\n\n      <section layout="row" layout-sm="column" layout-align="center center" layout-wrap>\n        <md-button type="submit" class="md-raised md-primary" ng-disabled="userForm.$invalid">\n          <md-icon class="material-icons">forward_next</md-icon>\n          Login\n        </md-button>\n        <md-button class="md-raised md-warn" ui-sref="signup">\n          <md-icon class="material-icons">person_add</md-icon>\n          Signup\n        </md-button>\n      </section>\n    </md-content>\n\n  </form>\n\n</div>\n\n<div layout-gt-xs="row" ng-if="loggedUser">\n\n  <md-toolbar >\n    Welcome, {{loggedUser.name}}!\n  </md-toolbar>\n</div>\n'),e.put("app/signup/signup.html",'<md-toolbar >\n  Sign up\n</md-toolbar>\n\n<br />\n\n<div>\n  <form name="userForm" ng-submit="vm.createUser(userForm)" novalidate>\n\n    <md-content flex>\n      <md-input-container class="md-block">\n        <label>Name</label>\n        <input ng-model="vm.user.name" ng-required="true" autocomplete="name" autofocus id="inputName">\n        <div class="hint">Please, tell us your name</div>\n      </md-input-container>\n\n      <script>$(document).trigger(\'autofocus_ready\');</script>\n\n      <md-input-container class="md-block md-icon-float">\n        <label>E-mail</label>\n        <input type="email" ng-model="vm.user.email" ng-required="true" autocomplete="email" name="inputEmail">\n\n        <div class="hint" ng-if="!vm.user.email && !userForm.inputEmail.$viewValue">\n          Ex: youemail@domain.com\n        </div>\n\n        <div class="hint" md-colors="{color: \'red\'}" ng-if="userForm.inputEmail.$error.email">\n          The e-mail <strong>{{userForm.inputEmail.$viewValue}}</strong> is invalid!\n        </div>\n\n        <div class="hint" md-colors="{color: \'green\'}" ng-if="userForm.inputEmail.$viewValue && !userForm.inputEmail.$error.email">\n          The e-mail <strong>{{userForm.inputEmail.$viewValue}}</strong> is perfect!\n        </div>\n      </md-input-container>\n\n      <md-input-container class="md-block">\n        <label>Password</label>\n        <input type="password" ng-model="vm.user.password" ng-required="true" name="inputPassword"\n          ng-pattern="/^(?:(?=.*[a-z])(?:(?=.*[A-Z])(?=.*[\\d\\W])|(?=.*\\W)(?=.*\\d))|(?=.*\\W)(?=.*[A-Z])(?=.*\\d)).{8,}$/">\n\n        <div class="hint" ng-if="!vm.user.password && !userForm.inputPassword.$viewValue">\n          Minimum 8 digits, with numbers, letters and symbols.\n        </div>\n\n        <div class="hint" md-colors="{color: \'red\'}" ng-if="userForm.inputPassword.$viewValue && userForm.inputPassword.$invalid">\n          <strong>Must have</strong> minimum 8 digits, with numbers, letters and symbols\n        </div>\n\n        <div class="hint" md-colors="{color: \'green\'}" ng-if="userForm.inputPassword.$viewValue && userForm.inputPassword.$valid">\n          This password is good!\n        </div>\n      </md-input-container>\n\n      <md-input-container class="md-block">\n        <label ng-show="vm.user.password === vm.user.repassword">Retype password</label>\n        <label ng-hide="vm.user.password === vm.user.repassword" md-colors="{color: \'red\'}">Retype password</label>\n        <input id="retypePass" type="password" ng-model="vm.user.repassword"\n          name="inputRetypePassword" ng-required="true">\n\n        <div class="hint" ng-if="!vm.user.repassword && !userForm.inputRetypePassword.$viewValue">\n          Please, confirm your password\n        </div>\n\n        <div class="hint" md-colors="{color: \'red\'}" ng-if="userForm.inputPassword.$viewValue !== userForm.inputRetypePassword.$viewValue">\n          Passwords don\'t match!\n        </div>\n\n        <div class="hint" md-colors="{color: \'green\'}" ng-if="userForm.inputRetypePassword.$viewValue && userForm.inputPassword.$viewValue === userForm.inputRetypePassword.$viewValue">\n          Passwords match!\n        </div>\n      </md-input-container>\n\n      <md-input-container class="md-block">\n        <label>Employer</label>\n        <input ng-model="vm.user.employer" >\n        <div class="hint">Your employer</div>\n      </md-input-container>\n\n      <md-input-container class="md-block">\n        <label>Job title</label>\n        <input ng-model="vm.user.jobTitle" >\n        <div class="hint">Your job title</div>\n      </md-input-container>\n\n      <md-input-container class="md-block">\n        <label>Birthday</label>\n        <md-datepicker id="userBirthday" ng-model="vm.user.birthday" md-open-on-focus></md-datepicker>\n      </md-input-container>\n\n      <section layout="row" layout-sm="column" layout-align="center center" layout-wrap>\n        <md-button type="submit" class="md-raised md-primary" ng-disabled="userForm.$invalid || vm.user.password !== vm.user.repassword">Create</md-button>\n        <md-button class="md-raised md-warn" ui-sref="home">Cancel</md-button>\n      </section>\n    </md-content>\n\n  </form>\n\n</div>\n')}]);