{"version":3,"sources":["scripts/app.js"],"names":["angular","module","routesConfig","$stateProvider","state","url","templateUrl","controller","controllerAs","$inject","config","signupController","$localForage","$rootScope","$mdToast","$state","createUser","form","$valid","setItem","vm","user","then","getItem","data","loggedUser","show","simple","textContent","name","hideDelay","go","this","logoutController","logout","homeController","$log","login","email","password","error","abstract","template","eventListController","init","events","eventDetailController","$stateParams","loadEvent","event","filter","id","eventCreateController","$mdConstant","createEvent","Date","now","push","guests","eventTypeList","value","label","states","abbrev","separatorKeys","KEY_CODE","ENTER","COMMA","$urlRouterProvider","$locationProvider","html5Mode","hashPrefix","otherwise","component","appConfig","run","$templateCache","put"],"mappings":"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","file":"../../scripts/app-a880c13dd6.js","sourcesContent":["(function () {\n  'use strict';\n\n  angular.module('eventplanner', ['ui.router', 'ngMaterial', 'LocalForageModule']);\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('eventplanner').config(routesConfig);\n\n  function routesConfig($stateProvider) {\n    \"ngInject\";\n\n    $stateProvider\n    .state('signup', {\n      url: '/signup',\n      templateUrl: 'app/signup/signup.html',\n      controller: 'SignupController',\n      controllerAs: 'vm'\n    });\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('eventplanner').controller('SignupController', signupController);\n\n  function signupController($localForage, $rootScope, $mdToast, $state) {\n    \"ngInject\";\n\n    var vm = this;\n\n    vm.createUser = createUser;\n\n    function createUser(form) {\n      if (form.$valid) {\n        $localForage.setItem('user', vm.user).then(function () {\n          $localForage.getItem('user').then(function (data) {\n            $rootScope.loggedUser = data;\n            $mdToast.show(\n              $mdToast.simple()\n              .textContent('Welcome, ' + data.name)\n              .hideDelay(3000)\n            );\n            $state.go('home');\n          });\n        });\n      }\n    }\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('eventplanner').controller('LogoutController', logoutController);\n\n  function logoutController($rootScope, $mdToast, $state) {\n    \"ngInject\";\n\n    var vm = this;\n\n    vm.logout = logout;\n\n    function logout() {\n      $mdToast.show(\n        $mdToast.simple()\n          .textContent('See you later! o/')\n          .hideDelay(3000)\n      );\n\n      $rootScope.loggedUser = null;\n\n      $state.go('home');\n    }\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('eventplanner').config(routesConfig);\n\n  function routesConfig($stateProvider) {\n    \"ngInject\";\n\n    $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: 'app/home/home.html',\n      controller: 'HomeController',\n      controllerAs: 'vm'\n    });\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('eventplanner').controller('HomeController', homeController);\n\n  function homeController($localForage, $rootScope, $mdToast, $log) {\n    \"ngInject\";\n\n    var vm = this;\n\n    vm.login = login;\n\n    function login(form) {\n      if (form.$valid) {\n        $localForage.getItem('user').then(function (data) {\n          if (data) {\n            if (data.email === vm.user.email && data.password === vm.user.password) {\n              $rootScope.loggedUser = data;\n              $mdToast.show(\n                $mdToast.simple()\n                .textContent('Welcome, ' + data.name)\n                .hideDelay(3000)\n              );\n            } else {\n              $mdToast.show(\n                $mdToast.simple()\n                .textContent('Invalid credentials!')\n                .hideDelay(3000)\n              );\n            }\n          } else {\n            $mdToast.show(\n              $mdToast.simple()\n              .textContent('No registered users.')\n              .hideDelay(3000)\n            );\n          }\n        }).catch(function (error) {\n          $mdToast.show(\n            $mdToast.simple()\n            .textContent('Unexpected error: ' + error)\n            .hideDelay(3000)\n          );\n          $log.error(error);\n        });\n      }\n    }\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('eventplanner').config(routesConfig);\n\n  function routesConfig($stateProvider) {\n    \"ngInject\";\n\n    $stateProvider\n    .state('event', {\n      url: '/event',\n      abstract: true,\n      template: '<ui-view/>'\n    })\n    .state('event.list', {\n      url: '/list',\n      templateUrl: 'app/event/event.list.html',\n      controller: 'EventListController',\n      controllerAs: 'vm'\n    })\n    .state('event.detail', {\n      url: '/view/:id',\n      templateUrl: 'app/event/event.detail.html',\n      controller: 'EventDetailController',\n      controllerAs: 'vm'\n    })\n    .state('event.create', {\n      url: '/create',\n      templateUrl: 'app/event/event.form.html',\n      controller: 'EventCreateController',\n      controllerAs: 'vm'\n    });\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('eventplanner').controller('EventListController', eventListController);\n\n  function eventListController($localForage) {\n    \"ngInject\";\n\n    var vm = this;\n\n    vm.init = init;\n\n    vm.init();\n\n    function init() {\n      $localForage.getItem('events').then(function (data) {\n        vm.events = data;\n      });\n    }\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('eventplanner').controller('EventDetailController', eventDetailController);\n\n  function eventDetailController($mdToast, $log, $localForage, $stateParams) {\n    \"ngInject\";\n\n    var vm = this;\n\n    vm.init = init;\n\n    vm.init();\n\n    function init() {\n      loadEvent();\n    }\n\n    function loadEvent() {\n      $localForage.getItem('events').then(function (events) {\n        vm.event = events.filter(function (event) {\n          return (event.id == $stateParams.id);\n        })[0];\n      }).catch(function (error) {\n        $mdToast.show(\n          $mdToast.simple()\n          .textContent('Unexpected error: ' + error)\n          .hideDelay(3000)\n        );\n        $log.error(error);\n      });\n    }\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('eventplanner').controller('EventCreateController', eventCreateController);\n\n  function eventCreateController($mdConstant, $localForage, $rootScope, $mdToast, $state) {\n    \"ngInject\";\n\n    var vm = this;\n\n    vm.event = {\n      guests: []\n    };\n\n    vm.eventTypeList = [\n      {value: 'birthday', label: 'Birthday'},\n      {value: 'conferenceTalk', label: 'Conference Talk'},\n      {value: 'party', label: 'Party'},\n      {value: 'show', label: 'Show'},\n      {value: 'wedding', label: 'Wedding'}\n    ];\n\n    vm.guests = [];\n\n    vm.states = [\n      {abbrev: 'BA', name: 'Bahia'},\n      {abbrev: 'MG', name: 'Minas Gerais'},\n      {abbrev: 'RJ', name: 'Rio de Janeiro'},\n      {abbrev: 'SP', name: 'São Paulo'}\n    ];\n\n    vm.separatorKeys = [$mdConstant.KEY_CODE.ENTER, $mdConstant.KEY_CODE.COMMA, /* semicolon = 186 */ 186];\n\n    vm.createEvent = createEvent;\n\n    function createEvent(form) {\n      //FIXME issue with localforage and date\n\n      if (form.$valid) {\n        $localForage.getItem('events').then(function (data) {\n          var events = data || [];\n\n          vm.event.id = Date.now();\n\n          events.push(vm.event);\n\n          $localForage.setItem('events', events).then(function () {\n            $mdToast.show(\n              $mdToast.simple()\n              .textContent(vm.event.name + ' created!')\n              .hideDelay(3000)\n            );\n            $state.go('event.list');\n          });\n        });\n      }\n    }\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('eventplanner').config(routesConfig);\n\n  function routesConfig($stateProvider, $urlRouterProvider, $locationProvider) {\n    \"ngInject\";\n\n    $locationProvider.html5Mode(true).hashPrefix('!');\n    $urlRouterProvider.otherwise('/');\n\n    $stateProvider\n    .state('app', {\n      url: '/',\n      component: 'app'\n    });\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('eventplanner').config(appConfig);\n\n  function appConfig() {\n    \"ngInject\";\n  }\n})();\n\nangular.module(\"eventplanner\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/event/event.detail.html\",\"<md-content flex>\\n  <md-toolbar>\\n    {{vm.event.name}}\\n  </md-toolbar>\\n\\n  <p>\\n    {{vm.event.type}} hosted by {{vm.event.host}}\\n  </p>\\n  <p>\\n    From: {{vm.event.startDate | date : \\'dd/MM/yyyy\\'}} {{vm.event.startTime | date : \\'HH:mm\\'}}\\n  </p>\\n  <p>\\n    To: {{vm.event.endDate | date : \\'dd/MM/yyyy\\'}} {{vm.event.endTime | date : \\'HH:mm\\'}}\\n  </p>\\n  <p>\\n    Guests:\\n    <md-chips ng-model=\\\"vm.event.guests\\\" readonly=\\\"true\\\">\\n      <md-chip-template>\\n        {{$chip}}\\n      </md-chip-template>\\n    </md-chips>\\n  </p>\\n  <p>\\n    {{vm.event.address}}, {{vm.event.city}}, {{vm.event.state}}\\n  </p>\\n  <p>\\n    <iframe src=\\\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3681.0937865940105!2d-43.27494718439352!3d-22.687552335789878!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x9973c193254263%3A0x3fb0ff85cd6293a1!2sAv.+das+Palmeiras%2C+1290+-+Jardim+Primavera%2C+Duque+de+Caxias+-+RJ!5e0!3m2!1spt-BR!2sbr!4v1477678601020\\\" width=\\\"100%\\\" height=\\\"300px\\\" frameborder=\\\"0\\\" style=\\\"border:0\\\" allowfullscreen></iframe>\\n  </p>\\n</md-content>\\n\");\n$templateCache.put(\"app/event/event.form.html\",\"<md-toolbar>\\n  Event creation {{vm.event.startTime}}\\n</md-toolbar>\\n\\n<br>\\n\\n<md-content flex>\\n\\n  <form name=\\\"eventForm\\\" novalidate ng-submit=\\\"vm.createEvent(eventForm)\\\">\\n\\n    <md-input-container class=\\\"md-block\\\">\\n      <label>Name</label>\\n      <input ng-model=\\\"vm.event.name\\\" ng-required=\\\"true\\\" autofocus>\\n      <div class=\\\"hint\\\">The name of your event</div>\\n    </md-input-container>\\n\\n    <md-input-container class=\\\"md-block\\\">\\n      <label>Type</label>\\n      <input id=\\\"eventType\\\" list=\\\"typeList\\\" ng-model=\\\"vm.event.type\\\" ng-required=\\\"true\\\">\\n      <div class=\\\"hint\\\">Ex: birthday party, conference talk, wedding, etc.</div>\\n      <datalist id=\\\"typeList\\\">\\n        <option value=\\\"Birthday\\\"></option>\\n        <option value=\\\"Conference Talk\\\"></option>\\n        <option value=\\\"Party\\\"></option>\\n        <option value=\\\"Show\\\"></option>\\n        <option value=\\\"Wedding\\\"></option>\\n      </datalist>\\n    </md-input-container>\\n\\n    <md-input-container class=\\\"md-block\\\">\\n      <label>Host</label>\\n      <input id=\\\"eventHost\\\" ng-model=\\\"vm.event.host\\\" ng-required=\\\"true\\\">\\n      <div class=\\\"hint\\\">Who is the event host?</div>\\n    </md-input-container>\\n\\n    <div layout=\\\"row\\\" flex>\\n      <md-input-container class=\\\"md-block\\\">\\n        <label>Start date</label>\\n        <md-datepicker id=\\\"eventStartDate\\\" ng-model=\\\"vm.event.startDate\\\" md-open-on-focus ng-required=\\\"true\\\"></md-datepicker>\\n      </md-input-container>\\n\\n      <md-input-container class=\\\"md-block\\\">\\n        <label>Hour</label>\\n        <input id=\\\"eventStartTime\\\" type=\\\"time\\\" ng-model=\\\"vm.event.startTime\\\" ng-required=\\\"true\\\">\\n      </md-input-container>\\n    </div>\\n\\n    <div layout=\\\"row\\\" flex>\\n      <md-input-container class=\\\"md-block\\\">\\n        <label>End date</label>\\n        <md-datepicker id=\\\"eventEndDate\\\" ng-model=\\\"vm.event.endDate\\\" md-open-on-focus ng-required=\\\"true\\\"></md-datepicker>\\n      </md-input-container>\\n\\n      <md-input-container class=\\\"md-block\\\">\\n        <label>Hour</label>\\n        <input id=\\\"eventEndTime\\\" type=\\\"time\\\" ng-model=\\\"vm.event.endTime\\\" ng-required=\\\"true\\\">\\n      </md-input-container>\\n    </div>\\n\\n    <md-input-container class=\\\"md-block\\\">\\n      <label>Address</label>\\n      <input id=\\\"eventAddress\\\" ng-model=\\\"vm.event.address\\\" ng-required=\\\"true\\\" autocomplete=\\\"address-line1\\\">\\n    </md-input-container>\\n\\n    <md-input-container md-no-float class=\\\"md-block\\\">\\n      <label>Address 2</label>\\n      <input id=\\\"eventAddress2\\\" ng-model=\\\"vm.event.address2\\\" autocomplete=\\\"address-line2\\\">\\n    </md-input-container>\\n\\n    <div layout-gt-sm=\\\"row\\\">\\n      <md-input-container class=\\\"md-block\\\">\\n        <label>City</label>\\n        <input id=\\\"eventCity\\\" ng-model=\\\"vm.event.city\\\" ng-required=\\\"true\\\" autocomplete=\\\"address-level2\\\">\\n      </md-input-container>\\n\\n      <md-input-container class=\\\"md-block\\\">\\n        <label>State</label>\\n        <md-select id=\\\"eventState\\\" ng-model=\\\"vm.event.state\\\" autocomplete=\\\"address-level1\\\">\\n          <md-option ng-repeat=\\\"state in vm.states\\\" value=\\\"{{state.abbrev}}\\\">\\n            {{state.name}}\\n          </md-option>\\n        </md-select>\\n      </md-input-container>\\n\\n    </div>\\n\\n    <md-input-container class=\\\"md-block\\\">\\n      <label>Gest list</label>\\n      <md-chips id=\\\"eventGuests\\\" name=\\\"eventGuests\\\" ng-model=\\\"vm.event.guests\\\" md-separator-keys=\\\"vm.separatorKeys\\\" placeholder=\\\"Write and press return\\\" secondary-placeholder=\\\"Another name\\\">\\n      </md-chips>\\n      <div class=\\\"hint\\\" md-colors=\\\"{color: \\'red\\'}\\\" ng-show=\\\"vm.event.guests.length === 0\\\">\\n        You must add at least one guest.\\n      </div>\\n    </md-input-container>\\n\\n    <md-switch ng-model=\\\"vm.notifyGuests\\\" aria-label=\\\"Notify guests\\\">\\n      Send a note for guests?\\n    </md-switch>\\n\\n    <md-input-container class=\\\"md-block\\\" ng-if=\\\"vm.notifyGuests\\\">\\n      <label>Notification</label>\\n      <textarea id=\\\"eventGuestsNotification\\\" ng-model=\\\"vm.event.notification\\\" md-maxlength=\\\"150\\\" rows=\\\"5\\\" md-select-on-focus>\\n      </textarea>\\n    </md-input-container>\\n\\n    <section layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"center center\\\" layout-wrap>\\n      <md-button type=\\\"submit\\\" class=\\\"md-raised md-primary\\\" ng-disabled=\\\"eventForm.$invalid || vm.event.guests.length === 0\\\">Create</md-button>\\n      <md-button class=\\\"md-raised md-warn\\\" ui-sref=\\\"home\\\">Cancel</md-button>\\n    </section>\\n\\n  </form>\\n\\n</md-content>\\n\");\n$templateCache.put(\"app/event/event.list.html\",\"<md-toolbar class=\\\"md-theme-light\\\">\\n  <h2 class=\\\"md-toolbar-tools\\\">\\n    <span>Events</span>\\n  </h2>\\n</md-toolbar>\\n\\n<br>\\n\\n<md-content flex layout-padding>\\n  <md-list>\\n    <md-list-item class=\\\"md-3-line\\\" ng-repeat=\\\"event in vm.events\\\">\\n      <div class=\\\"md-list-item-text\\\">\\n        <h3>\\n          <a ui-sref=\\\"event.detail({id: event.id})\\\">{{event.name}}</a>\\n        </h3>\\n        <h3>{{event.type}}, hosted by {{event.host}}</h3>\\n        <p>\\n          {{event.city}}, {{event.state}}\\n        </p>\\n        <p>\\n          {{event.address}}\\n        </p>\\n        <p ng-if=\\\"event.address2\\\">\\n          {{event.address2}}\\n        </p>\\n        <md-chips ng-model=\\\"event.guests\\\" readonly=\\\"true\\\">\\n          <md-chip-template>\\n            {{$chip}}\\n          </md-chip-template>\\n        </md-chips>\\n      </div>\\n      <md-divider ng-if=\\\"!$last\\\"></md-divider>\\n    </md-list-item>\\n  </md-list>\\n</md-content>\\n\");\n$templateCache.put(\"app/home/home.html\",\"<div ng-if=\\\"!loggedUser\\\">\\n  <form name=\\\"userForm\\\" novalidate ng-submit=\\\"vm.login(userForm)\\\">\\n\\n    <md-toolbar>\\n      Authentication\\n    </md-toolbar>\\n\\n    <br>\\n\\n    <md-content flex>\\n\\n      <md-input-container class=\\\"md-block md-icon-float\\\">\\n        <label>E-mail</label>\\n        <input ng-model=\\\"vm.user.email\\\" ng-required=\\\"true\\\" autofocus>\\n      </md-input-container>\\n\\n      <md-input-container class=\\\"md-block\\\">\\n        <label>Password</label>\\n        <input type=\\\"password\\\" ng-model=\\\"vm.user.password\\\" ng-required=\\\"true\\\">\\n      </md-input-container>\\n\\n      <section layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"center center\\\" layout-wrap>\\n        <md-button type=\\\"submit\\\" class=\\\"md-raised md-primary\\\" ng-disabled=\\\"userForm.$invalid\\\">\\n          <md-icon class=\\\"material-icons\\\">forward_next</md-icon>\\n          Login\\n        </md-button>\\n        <md-button class=\\\"md-raised md-warn\\\" ui-sref=\\\"signup\\\">\\n          <md-icon class=\\\"material-icons\\\">person_add</md-icon>\\n          Signup\\n        </md-button>\\n      </section>\\n    </md-content>\\n\\n  </form>\\n\\n</div>\\n\\n<div layout-gt-xs=\\\"row\\\" ng-if=\\\"loggedUser\\\">\\n\\n  <md-toolbar>\\n    Welcome, {{loggedUser.name}}!\\n  </md-toolbar>\\n</div>\\n\");\n$templateCache.put(\"app/signup/signup.html\",\"<md-toolbar>\\n  Sign up\\n</md-toolbar>\\n\\n<br>\\n\\n<div>\\n  <form name=\\\"userForm\\\" ng-submit=\\\"vm.createUser(userForm)\\\" novalidate>\\n\\n    <md-content flex>\\n      <md-input-container class=\\\"md-block\\\">\\n        <label>Name</label>\\n        <input ng-model=\\\"vm.user.name\\\" ng-required=\\\"true\\\" autocomplete=\\\"name\\\" autofocus>\\n        <div class=\\\"hint\\\">Please, tell us your name</div>\\n      </md-input-container>\\n\\n      <md-input-container class=\\\"md-block md-icon-float\\\">\\n        <label>E-mail</label>\\n        <input type=\\\"email\\\" ng-model=\\\"vm.user.email\\\" ng-required=\\\"true\\\" autocomplete=\\\"email\\\">\\n        <div class=\\\"hint\\\">Ex: youemail@domain.com</div>\\n      </md-input-container>\\n\\n      <md-input-container class=\\\"md-block\\\">\\n        <label>Password</label>\\n        <input type=\\\"password\\\" ng-model=\\\"vm.user.password\\\" ng-pattern=\\\"/^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$/\\\" ng-required=\\\"true\\\">\\n        <div class=\\\"hint\\\">Minimum 8 digits, with numbers and letters</div>\\n      </md-input-container>\\n\\n      <md-input-container class=\\\"md-block\\\">\\n        <label ng-show=\\\"vm.user.password === vm.user.repassword\\\">Retype password</label>\\n        <label ng-hide=\\\"vm.user.password === vm.user.repassword\\\" md-colors=\\\"{color: \\'red\\'}\\\">Retype password</label>\\n        <input id=\\\"retypePass\\\" type=\\\"password\\\" ng-model=\\\"vm.user.repassword\\\" ng-required=\\\"true\\\">\\n        <div class=\\\"hint\\\">Please, confirm your password</div>\\n      </md-input-container>\\n\\n      <md-input-container class=\\\"md-block\\\">\\n        <label>Employer</label>\\n        <input ng-model=\\\"vm.user.employer\\\">\\n        <div class=\\\"hint\\\">Your employer</div>\\n      </md-input-container>\\n\\n      <md-input-container class=\\\"md-block\\\">\\n        <label>Job title</label>\\n        <input ng-model=\\\"vm.user.jobTitle\\\">\\n        <div class=\\\"hint\\\">Your job title</div>\\n      </md-input-container>\\n\\n      <md-input-container class=\\\"md-block\\\">\\n        <label>Birthday</label>\\n        <md-datepicker id=\\\"userBirthday\\\" ng-model=\\\"vm.user.birthday\\\" md-open-on-focus></md-datepicker>\\n      </md-input-container>\\n\\n      <section layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"center center\\\" layout-wrap>\\n        <md-button type=\\\"submit\\\" class=\\\"md-raised md-primary\\\" ng-disabled=\\\"userForm.$invalid || vm.user.password !== vm.user.repassword\\\">Create</md-button>\\n        <md-button class=\\\"md-raised md-warn\\\" ui-sref=\\\"home\\\">Cancel</md-button>\\n      </section>\\n    </md-content>\\n\\n  </form>\\n\\n</div>\\n\");}]);"]}